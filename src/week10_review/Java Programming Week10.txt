Java Programming Week10

Review Topics: Statics vs Instance
               Encapsulation

package name: week10_review


static vs instance:
    
    Instance (Multiple copies): Belong to the object. can be called through the object

            each object has its own copy of instances

            Instance Variables
            Instance Methods
            Constructor
            Inner Class

    Static (One copy): Belong to the class. can be called through the class name

            All objects have the same copy

            Statics ONLY accetps statics (Class does not share what the object has)

            Static Variables
            Static Methods
            Static Block
            Static Inner Class


OOP: 
    
    4 concepts:
        1. Encapsulation
        2. Inheritance
        3. Abstraction
        4. Polymophism

Encapsulation: Data Hiding
        
        1. hide the data by giving private access modifier

                private: only visible within the class

        2. generate public getters/setters methods to read/modify the data outside the class

                getter (Read ONLY): public instance methods (Return method)
                                    0 parameters

                setter (Modify ONLY): public instance methods (Void Method)
                                    1 parameter
                                    

using the data:
    1. read
    2. write

Pizza Task:
    Create class named Pizza:
                private variables:
                    size, numberOfCheeseTopping, numberOfPepperoniTopping

                Encapsulate all the fields
                        Conditions:
                            1. size of the pizza can only be set to small, medium, large (case insensitive)
                            2. Number of cheese topping can not be negative, the maximum number of cheese topping is:
                                        small: 3
                                        medium: 4
                                        large: 5

                            3. Number of pepperoni topping can not be negative, the maximum number of pepperoni topping is:
                                        small: 4
                                        medium: 5
                                        large: 6

                Add a constructor that allows user to set all the fields when the object is created.
                                (If the arguments not valid it should not be set to the instances)

                Methods:
                    calcCost(): returns the totalCost of the pizza
                    toString():returns a String containing the pizza size, quantity of each topping, and the pizza cost as calculated by calcCost()

        Pizza cost is determined by:
                        S: starts at $10 
                        M: starts at $12
                        L: starts at $14 

                        Per pepperoni topping: 2$
                        Per cheese topping: 1$





